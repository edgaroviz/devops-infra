name: Verify/Create S3 and apply infra config

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  S3_bucket_verification:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ env.skip }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: S3 Bucket Verification
        id: skip
        run: |
          if aws s3api head-bucket --bucket ze-my-bucket 2>/dev/null; then
              echo "Bucket exists"
              echo "skip=true" >> $GITHUB_ENV
          else
              echo "Bucket does not exist or access denied"
              echo "skip=false" >> $GITHUB_ENV
          fi

  S3_bucket_creation:
    runs-on: ubuntu-latest
    outputs:
      create: true
    needs: S3_bucket_verification
    if: needs.S3_bucket_verification.outputs.skip == 'false'
    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      # - name: Verify AWS CLI
      #   run: aws s3 ls

      - name: Create S3 Bucket
        run: |
          echo $(pwd)
          cd tf-infra/resources/s3-bucket
          terraform init
          terraform plan
          terraform apply --auto-approve

  Create_infra_tf:
    runs-on: ubuntu-latest
    needs: [S3_bucket_verification, S3_bucket_creation]
    if: needs.S3_bucket_verification.outputs.skip == 'true' || success()
    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      # - name: Verify AWS CLI
      #   run: aws s3 ls


      # - name: Configure Git user
      #   run: |
      #     git config --local user.name ${{ secrets.GIT_USER }}
      #     git config --local user.email ${{ secrets.GIT_EMAIL }}

      # - name: Set up Git remote with PAT
      #   run: |
      #     git remote set-url origin https://x-access-token:${{ secrets.GIT_TOKEN }}@github.com/cybereason-labs/defender-design-system.git

      # - name: Fetch and rebase from master
      #   run: |
      #     echo $(git branch)
      #     git fetch origin
      #     git pull

      # - name: Push package.json to master
      #   run: |
      #     echo "current directory:"
      #     echo $(pwd)
      #     git add ***hash of new container
      #     git commit -m "Version update on build"
      #     git push origin master --force-with-lease
