name: Verify/Create S3 and apply infra config

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - feature-git-actions-testing

jobs:
  # S3_bucket_verification:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     s3_skip: ${{ steps.s3_check.outputs.s3_skip }}
  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-west-1

  #     - name: S3 Bucket Verification
  #       id: s3_check
  #       run: |
  #         if aws s3api head-bucket --bucket ze-my-bucket 2>/dev/null; then
  #             echo "s3_skip=true" >> $GITHUB_OUTPUT
  #         else
  #             echo "s3_skip=false" >> $GITHUB_OUTPUT
  #         fi

  # S3_bucket_creation:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     create: true
  #   needs: S3_bucket_verification
  #   if: needs.S3_bucket_verification.outputs.s3_skip == 'false'
  #   permissions:
  #     contents: 'write'
  #     id-token: 'write'

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-west-1

  #     - name: Create S3 Bucket
  #       run: |
  #         echo $(pwd)
  #         cd tf-infra/resources/s3-bucket
  #         terraform init
  #         terraform plan
  #         echo "reached tf apply"

  # ECR_verification:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     ecr_skip: ${{ steps.ecr_check.outputs.ecr_skip }}
  #   needs: [S3_bucket_verification, S3_bucket_creation]
  #   if: always()
  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-west-1

  #     - name: ECR Verification
  #       id: ecr_check
  #       run: |
  #         repo_name="ze-my-ecr"
  #         region="eu-west-1"

  #         if aws ecr describe-repositories --repository-names "$repo_name" --region "$region" 2>/dev/null; then
  #             echo "ecr_skip=true" >> $GITHUB_OUTPUT
  #         else
  #             echo "ecr_skip=false" >> $GITHUB_OUTPUT
  #         fi

  # ECR_creation:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     ecr_create: true
  #   needs: ECR_verification
  #   if: needs.ECR_verification.outputs.ecr_skip == 'false'
  #   permissions:
  #     contents: 'write'
  #     id-token: 'write'

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-west-1

  #     - name: Create AWS ECR
  #       run: |
  #         echo $(pwd)
  #         cd tf-infra/resources/ecr
  #         terraform init
  #         terraform plan
  #         echo "reached tf apply"

  Create_infra_tf:
    runs-on: ubuntu-latest
    # needs: [S3_bucket_verification, S3_bucket_creation, ECR_verification, ECR_creation]
    # if: always()
    # if: needs.ECR_verification.outputs.ecr_skip == 'true'
    # permissions:
    #   contents: 'write'
    #   id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Apply Dev env infra
        run: |
          echo $pwd
          echo $(pwd)
          cd dev/eu-west-1
          echo $(pwd)
          terraform init
          terraform plan

      - name: Apply Staging env infra
        run: |
          echo $(pwd)
          cd staging/eu-west-1
          echo $(pwd)
          terraform init
          terraform plan

      - name: Apply Prod env infra
        run: |
          echo $(pwd)
          cd prod/eu-west-1
          echo $(pwd)
          terraform init
          terraform plan
